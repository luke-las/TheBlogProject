@using TheBlogProject.Services
@using TheBlogProject.Models
@using X.PagedList
@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common

@inject IImageService imageService
@model IPagedList<TheBlogProject.Models.Post>

@{
    ViewData["Title"] = "Index";
}

@if (User.IsInRole("Administrator"))
{
    <p>
        <a asp-action="Create">Create New</a>
    </p>
}
@*<table class="table">
        <thead>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        <img class="img-fluid" src="@imageService.DecodeImage(item.ImageData, item.ContentType)" />
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Title)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Abstract)
                    </td>
                    <td>

                        @if (User.IsInRole("Administrator"))
                        {
                            <a asp-action="Edit" asp-route-id="@item.Id">Edit</a><br />
                            <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                        }
                        <a asp-action="Details" asp-route-slug="@item.Slug">Details</a><br />

                    </td>
                </tr>
            }
        </tbody>
    </table>*@
@foreach (var post in Model)
{
<div class="post-preview">
    <a asp-action="Details" asp-route-slug="@post.Slug">
        <h2 class="post-title">@post.Title</h2>
        <h3 class="post-subtitle">@post.Abstract</h3>
    </a>
    <p class="post-meta">
        authored by
        <a href="#!">Luke Lasorsa</a>
        on @post.Created.ToString("MMM dd, yyyy")
    </p>
    @if (User.IsInRole("Administrator"))
    {
        <a asp-action="Edit" asp-route-id="@post.Id">Edit</a><br />
        <a asp-action="Delete" asp-route-id="@post.Id">Delete</a>
    }
</div>
    <hr />
}
<hr />
<div class="row">
    <div class="col h3">
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

    </div>
</div>
<div class="row">
    <div class="col">
        @Html.PagedListPager(Model, page => Url.Action("Index", new { page = page }),
         new PagedListRenderOptionsBase
         {
             LiElementClasses = new string[] { "page-item" },
             PageClasses = new string[] { "page-link" }
         })
    </div>
</div>